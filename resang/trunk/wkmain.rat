include "ascii.inc"         
include "bbctl.inc"         
include "bbcode.inc"         
include "macros.inc"
include "bbsta.inc"         

define(BBImplicit, Implicit None)

define (kill$common,
	integer losta, hista
	common/killcommon/losta, hista
)


program kill_ws
#######################################################
#$%
#$% Purpose:   Kill range of active workstations
#$%            Use process id (PID) of astabs and geo in BB
#$%
#$% Called By: None
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      Mar 15
#$%
#$% Author:    James Allen
#$%
#######################################################

BBcommon
kill$common

call initr4                 #$% initialize RATFOR environment

BBmap                       #$% map in the BB global section

call init_script

call kill_stations

end


subroutine kill_stations
bbcommon
BBdeclare (sta$pointer)
kill$common
integer ista
integer game_dtg


for (ista = losta; ista <= hista; ista = ista + 1)
{
	call kill_workstation_processes(ista)
	sta$pointer$to ista
	PUTsta$playerOn$i(NO)

	# Display station status
	call echoiz(game_dtg(game$time), 6)
	call echov (" Station ")
	call echoib (ista, 2)
	call echov (" Stopped")
	call echor
}
return
end



subroutine init_script
bbcommon
kill$common

integer         open_, ctoi, getarg3
character       buf[100]
external        scopy

integer         K, IPOS                  
BBdeclare      (STA$Pointer)

# Command Line Arguments: <low station #>[|-<high station #>]

 call help_pgm(2,
              "killsta: Kill range of active workstations",
              "killsta Tags: workstation",
              "Usage: killsta <low station #>[|-<high station #>]",
              "<low station #> Workstation number (1-64)",
              "<high station #> Workstation number (>low-64)",
              "",
              "",
              "Example: killsta 1-64")

 k = getarg3(1, buf, 20)                  # Station Number Range is 1st Argument
 if (buf[1] != EOS) 
   {
    ipos = 1
    losta = ctoi (buf,ipos)
	hista = losta
   }

if (buf[ipos] == $minus)
{
	ipos = ipos + 1
    hista = ctoi (buf,ipos)
}

STA$Pointer$To losta
if (!STA$Pointer$Valid)
{
	 print *, "Invalid Low Station Number."
     call exit
}

STA$Pointer$To hista
if (!STA$Pointer$Valid)
{
	 print *, "Invalid High Station Number."
     call exit
}

if (hista < losta)
{
	 print *, "High station less than Low station."
     call exit
}


return
end


